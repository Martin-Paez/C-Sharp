
----------------------  OPERACIONES CON ESTUDIO ------------------------

{Eliminar}
/* Elimina un expediente indicado por el usuario
 *
 * Recibe:
 * 	Estudio:   El estudio al que se le da la orden de eliminar el expediente
 *
 * Retorna:
 * 	True    	  Si el expediente se elimino exitosamente
 * 	False		  Si el numero de expediente ingresado no es valido
 */


{Despedir}
/* Elimina un abogado indicado por el usuario
 *
 * Recibe:
 * 	Estudio:		El estudio al que se le da la orden de eliminar el abogado
 *
 * Retorna:
 *		True			Si se elimino el abogado exitosamente
 *		False			Si no se encontro un abogado con el DNI ingresado
 */

{Contratar}
/* Agrega un abogado al estudio con los atributos ingresados por el usuario
 * (Nota: agregue "al estudio" con el riesgo de ser redundante para que veas como queda nomas)
 * Recibe:
 *		Estudio:		El estudio al que se le da la orden de agregar un abogado
 *
 *	Retorna:
 *		True			Si el abogado se agregó exitosamente
 *		False			Si el DNI del abogado ya existe o si no se ingresan datos clave (Nombre/Apellido/Especializacion)
 */

{Agregar}
/* Agrega un expediente con los atributos ingresados por el usuario
 *
 * Recibe:
 *		Estudio:		El estudio al que se le da la orden de agregar un expediente
 *
 *	Retorna:
 *		True			Si el expediente se agrego exitosamente (Con o sin un abogado asignado)
 *		False			Si no se ingresan datos clave (nombre titular, apellido, etc), si el DNI del titular no es valido o si el numero de exp ya existe y el usuario no ingresa uno nuevo
 */

{Asignar}
/* Asigna un abogado deseado a un expediente ingresado por el usuario
 *
 * Recibe:
 *		Estudio:		El estudio al que se le da la orden de asignar el abogado
 *		numero:		Numero de expediente al cual será asignado el abogado
 *
 * Retorna:
 *		True			Si el expediente fue asignado exitosamente	
 *		False			Si el numero de expediente o el DNI del abogado no existen, o si el abogado tiene demasiados expedientes asignados
 */

{FiltrarAudiencias}
/* Imprime una lista de expedientes de tipo audiencia con el mes que indique el usuario
 *
 * Recibe:
 *		lista:		La lista de expedientes a filtrar
 *
 * Retorna:
 *		True			Si la nueva lista se creo exitosamente
 *		False			Si el dato ingresado no es un numero o no está dentro del rango utilizable
 */

---------------------   INTERACTUAR CON EL USUARIO   ---------------------------


{ImprimirLista}
/* Imprime, si existe, una lista
 *
 * Recibe:
 *		lista:		La lista que se va a imprimir
 *		titulo:		El titulo de los objetos dentro de la lista seleccionada
 *
 * Retorna:
 *		void			
 */

{LeerDatos}
/* Ordena, en una lista, datos ingresados por el usuario
 * 
 * Recibe:
 *		nombres:		String de datos a ordenar
 *
 * Retorna:
 *		Lista 		Si se ingresaron todos los datos correctamente
 *		null			Si algun dato no fue ingresado
 */